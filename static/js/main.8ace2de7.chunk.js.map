{"version":3,"sources":["components/Header.js","components/Error.js","components/Form.js","helpers/helper.js","components/Summary.js","components/Result.js","components/Spinner.js","App.js","index.js"],"names":["StyledH3","styled","h3","Header","className","Error","message","StyledButton","Styled","button","Form","setSummary","setLoading","years","currentYear","Date","getFullYear","index","push","getYears","useState","brand","year","plan","data","setData","getInformation","event","target","name","value","error","setError","onSubmit","preventDefault","trim","base","getDifferenceYear","calculateBrand","increment","getCalculateBrand","calculatePlan","getCalculatePlan","planIncrement","parseFloat","toFixed","setTimeout","totalPlan","Number","htmlFor","id","onChange","map","element","key","type","checked","Summary","Result","Spinner","App","summary","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ace2de7.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledH3 = styled.h3`\r\n    font-size: 2rem;\r\n    font-family: 'Slabo 27px', serif;\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                <StyledH3 className=\"my-3 mx-auto\">Cotizador de Seguros</StyledH3>\r\n            </nav>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Error = ({ message }) => {\r\n    return (\r\n        <div className=\"alert alert-dismissible alert-danger col-sm-6\">\r\n            <strong>{message}</strong>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import React, { useState } from 'react';\r\nimport Styled from '@emotion/styled';\r\nimport Error from './Error';\r\nimport { getYears, getDifferenceYear, getCalculateBrand, getCalculatePlan } from '../helpers/helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledButton = Styled.button`\r\n    width: 100%;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    transition: background-image .3s ease;\r\n\r\n    &:hover {\r\n        background-image: linear-gradient(#f89558, #e27e3e 60%, #c77846) !important;\r\n    }\r\n`;\r\n\r\nconst Form = ({ setSummary, setLoading }) => {\r\n\r\n    const years = getYears();\r\n\r\n    const [data, setData] = useState({\r\n        brand: '',\r\n        year: '',\r\n        plan: ''\r\n    });\r\n\r\n    const { brand, year, plan } = data;\r\n\r\n    const getInformation = event => {\r\n        setData({\r\n            ...data,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (brand.trim() === '' || year.trim() === '' || plan.trim() === '') {\r\n            setError(true);\r\n        } else {\r\n            setError(false);\r\n            let base = 25590;\r\n            const differenceYear = getDifferenceYear(year);\r\n            base -= ((differenceYear * 3) * base) / 100; // Por cada año se resta el 3%\r\n            const calculateBrand = getCalculateBrand(brand) * base;\r\n            const calculatePlan = getCalculatePlan(plan);\r\n            const planIncrement = parseFloat(calculatePlan * calculateBrand).toFixed(2);\r\n            setLoading(true);\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n                setSummary({\r\n                    totalPlan: Number(planIncrement),\r\n                    data\r\n                });\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"mt-5 offset-sm-4\" onSubmit={handleSubmit}>\r\n            {error ? <Error message=\"Todos los campos son obligatorios.\"></Error> : null}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"slcCarBrand\">Marca:</label>\r\n                <select id=\"slcCarBrand\" className=\"form-control col-sm-6\" name=\"brand\" value={brand} onChange={getInformation}>\r\n                    <option value=\"\">Seleccione</option>\r\n                    <option value=\"americano\">Americano</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                    <option value=\"asiático\">Asiático</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"slcCarYear\">Año:</label>\r\n                <select id=\"slcCarYear\" className=\"form-control col-sm-6\" name=\"year\" value={year} onChange={getInformation}>\r\n                    <option value=\"\">Seleccione</option>\r\n                    {years.map(element => <option key={element} value={element}>{element}</option>)}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Plan:</label>\r\n                <div className=\"custom-control custom-radio\">\r\n                    <input type=\"radio\" id=\"rdbBasic\" name=\"plan\" className=\"custom-control-input\" value=\"básico\" checked={plan === \"básico\"} onChange={getInformation} />\r\n                    <label className=\"custom-control-label\" htmlFor=\"rdbBasic\">Básico</label>\r\n                </div>\r\n                <div className=\"custom-control custom-radio\">\r\n                    <input type=\"radio\" id=\"rdbComplete\" name=\"plan\" className=\"custom-control-input\" value=\"completo\" checked={plan === \"completo\"} onChange={getInformation} />\r\n                    <label className=\"custom-control-label\" htmlFor=\"rdbComplete\">Completo</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-6 text-center\">\r\n                <StyledButton className=\"btn btn-warning\" type=\"submit\">Cotizar</StyledButton>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nForm.propTypes = {\r\n    setSummary: PropTypes.func.isRequired,\r\n    setLoading: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form;","export const getYears = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    const years = [];\r\n    for (let index = 0; index < 9; index++) {\r\n        years.push(currentYear - index)\r\n    }\r\n    return years;\r\n}\r\n\r\nexport const getDifferenceYear = year => {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\nexport const getCalculateBrand = brand => {\r\n    let increment;\r\n    switch (brand) {\r\n        case 'americano':\r\n            increment = 1.30;\r\n            break;\r\n        case 'europeo':\r\n            increment = 1.15;\r\n            break;\r\n        case 'asiático':\r\n            increment = 1.05\r\n            break;\r\n\r\n        default:\r\n            increment = 1;\r\n            break;\r\n    }\r\n    return increment;\r\n}\r\n\r\nexport const getCalculatePlan = plan => {\r\n    return plan === 'básico' ? 1.20 : 1.50;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Summary = ({ data }) => {\r\n\r\n    const { brand, year, plan } = data;\r\n\r\n    return (\r\n        <div className=\"alert alert-dismissible alert-primary offset-sm-3 col-sm-6 mt-4\">\r\n            <div className=\"offset-sm-4\">\r\n                <strong className=\"text-center offset-sm-2\">Resumen</strong>\r\n                <ul className=\"mt-2\">\r\n                    <li><strong>Año: </strong>{year}</li>\r\n                    <li className=\"text-capitalize\"><strong>Marca: </strong>{brand}</li>\r\n                    <li className=\"text-capitalize\"><strong>Plan: </strong>{plan}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nSummary.propTypes = {\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Summary;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Result = ({ totalPlan }) => {\r\n    return (\r\n        <div className=\"alert alert-dismissible alert-success text-center offset-sm-3 col-sm-6 mt-4\">\r\n            <strong>El total del plan es: $ </strong>{totalPlan}\r\n        </div>\r\n    );\r\n}\r\n\r\nResult.propTypes = {\r\n    totalPlan: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport './css/spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"bounce1\"></div>\r\n            <div className=\"bounce2\"></div>\r\n            <div className=\"bounce3\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useState, Fragment } from 'react';\r\nimport Header from './components/Header';\r\nimport Form from './components/Form';\r\nimport Summary from './components/Summary';\r\nimport Result from './components/Result';\r\nimport Spinner from './components/Spinner';\r\n\r\nconst App = () => {\r\n\r\n    const [summary, setSummary] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { totalPlan, data } = summary;\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <Form setSummary={setSummary} setLoading={setLoading} />\r\n                {loading ? <Spinner /> : null}\r\n                {!loading && data ? <Summary data={data} /> : null}\r\n                {!loading && totalPlan ? <Result totalPlan={totalPlan} /> : null}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}